import UIKit

enum BannerViewConstants {
    // MARK: - –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –∫–Ω–æ–ø–∫–∏ –∑–∞–∫—Ä—ã—Ç–∏—è
    static let closeButtonTopMargin: CGFloat = 14.0
    static let closeButtonSize: CGFloat = 14.0
    static let closeButtonTitle: String = "‚úï"
    static let closeButtonFontSize: CGFloat = 12.0
    static let closeButtonFontWeight: UIFont.Weight = .bold
    static let closeButtonBackgroundAlpha: CGFloat = 0.5
    
    // MARK: - –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è –æ —Å–∫—Ä—ã—Ç–æ–π —Ä–µ–∫–ª–∞–º–µ
    static let adHiddenMessage: String = "–†–µ–∫–ª–∞–º–∞ —Å–∫—Ä—ã—Ç–∞"
    static let adHiddenFontSize: String = "18px"
    static var adHiddenHTML: String {
        return """
        <!DOCTYPE html>
        <html>
        <head>
            <style>
                body { margin: 0; display: flex; justify-content: center; align-items: center; height: 100vh; background-color: #f5f5f5; color: #333; font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, "Helvetica Neue", Arial, sans-serif; font-size: \(adHiddenFontSize); text-align: center; }
            </style>
        </head>
        <body>\(adHiddenMessage)</body>
        </html>
        """
    }
    
    // MARK: - –ö–æ–Ω—Å—Ç–∞–Ω—Ç—ã –¥–ª—è JavaScript
    static let clickHandlerName: String = "clickHandler"
    static var clickDetectionScript: String {
        return """
        document.addEventListener('click', function(event) {
            window.webkit.messageHandlers.\(clickHandlerName).postMessage({
                tagName: event.target.tagName.toLowerCase(),
                href: event.target.href || '',
                text: event.target.innerText || ''
            });
        });
        """
    }
    
    static let metaName: String = "viewport"
    static let metaContent: String = "width=device-width, initial-scale=1.0, user-scalable=yes"
    
    static func viewportScript(for webViewWidth: CGFloat) -> String {
        return """
        var meta = document.createElement('meta');
        meta.name = '\(metaName)';
        meta.content = '\(metaContent)';
        document.getElementsByTagName('head')[0].appendChild(meta);
        
        var scale = \(webViewWidth) / document.body.scrollWidth;
        document.body.style.transform = 'scale(' + scale + ')';
        document.body.style.width = document.body.scrollWidth + 'px';

        // –ü–æ–ª—É—á–∞–µ–º —Ä–∞–∑–º–µ—Ä—ã —ç–ª–µ–º–µ–Ω—Ç–∞ –ø–æ—Å–ª–µ –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è —Å–∫–µ–π–ª–∞
        var rect = document.body.getBoundingClientRect();
        var newHeight = rect.height;

        // –í–æ–∑–≤—Ä–∞—â–∞–µ–º –Ω–æ–≤—ã–µ —Ä–∞–∑–º–µ—Ä—ã
        newHeight;
        """
    }

    
    static var detectIframeNavigationScript: String {
        return """
        (function() {
            document.addEventListener('click', function(event) {
                var eventTarget = event.target;
                var checkedElements = [];
        
                function logAndSend(element, source) {
                    if (!element) return;
        
                    var elementInfo = {
                        tagName: element.tagName.toLowerCase(),
                        href: element.href || '',
                        hasOnClick: !!element.onclick,
                        source: source
                    };
        
                    console.log(" –ü—Ä–æ–≤–µ—Ä–µ–Ω–æ:", elementInfo);
                    window.webkit.messageHandlers.\(clickHandlerName).postMessage(elementInfo);
                }
        
                //  –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–∞–º —ç–ª–µ–º–µ–Ω—Ç, –ø–æ –∫–æ—Ç–æ—Ä–æ–º—É –∫–ª–∏–∫–Ω—É–ª–∏
                logAndSend(eventTarget, "clicked_element");
        
                //  –ü–æ–¥–Ω–∏–º–∞–µ–º—Å—è –≤–≤–µ—Ä—Ö –ø–æ DOM, –ø–æ–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–º `A`, `BUTTON`, `DIV`
                while (eventTarget && eventTarget !== document) {
                    if (eventTarget.tagName.match(/^(A|BUTTON|DIV)$/i)) {
                        logAndSend(eventTarget, "parent_element");
                    }
                    eventTarget = eventTarget.parentElement;
                }
        
                //  –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∏–∑–º–µ–Ω–∏–ª—Å—è –ª–∏ `window.location.href`
                setTimeout(function() {
                    var newUrl = window.location.href;
                    if (newUrl && newUrl !== "about:blank") {
                        logAndSend({ tagName: "document", href: newUrl }, "window_location");
                    }
                }, 500);
        
                //  –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ `iframe`
                var iframe = document.querySelector("iframe");
                if (iframe) {
                    setTimeout(function() {
                        try {
                            var iframeUrl = iframe.contentWindow?.location.href;
                            if (iframeUrl && iframeUrl !== "about:blank") {
                                logAndSend({ tagName: "iframe", href: iframeUrl }, "iframe_navigation");
                            }
                        } catch (e) {
                            console.warn(" –î–æ—Å—Ç—É–ø –∫ iframe –∑–∞–ø—Ä–µ—â–µ–Ω:", e);
                        }
                    }, 500);
                }
            }, true);
        })();
        """
    }
    
    // MARK: - –î—Ä—É–≥–∏–µ —Å—Ç—Ä–æ–∫–æ–≤—ã–µ –∫–æ–Ω—Å—Ç–∞–Ω—Ç—ã
    static let jsErrorMessagePrefix: String = "–û—à–∏–±–∫–∞ JavaScript: "
    static let clickLogPrefix: String = "üëÜ –ö–ª–∏–∫ –ø–æ "
}
